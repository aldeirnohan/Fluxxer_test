services:
  # Serviço da API Laravel
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fluxxer_app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
    networks:
      - fluxxer_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=fluxxer_test
      - DB_USERNAME=fluxxer_user
      - DB_PASSWORD=fluxxer_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=fluxxer_redis_password
      - QUEUE_CONNECTION=redis
      - HORIZON_DOMAIN=localhost
      - HORIZON_PATH=horizon
    command: >
      sh -c "
        echo '🚀 Aguardando dependências...' &&
        sleep 10 &&
        echo '📝 Configurando Laravel...' &&
        if [ ! -f .env ]; then cp .env.example .env; fi &&
        echo '📦 Instalando dependências do Composer...' &&
        composer install --ignore-platform-reqs --no-interaction --prefer-dist --optimize-autoloader &&
        echo '🔑 Gerando chave da aplicação...' &&
        php artisan key:generate --force &&
        echo '🗄️ Executando migrations...' &&
        php artisan migrate --force &&
        echo ' Limpando caches...' &&
        php artisan config:clear &&
        php artisan route:clear &&
        php artisan cache:clear &&
        echo '✅ Laravel configurado! Iniciando PHP-FPM e Horizon...' &&
        php artisan horizon &
        php-fpm
      "

  # Servidor web Nginx para Laravel
  nginx:
    image: nginx:alpine
    container_name: fluxxer_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - fluxxer_network
    depends_on:
      - app

  # Frontend Vue.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fluxxer_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fluxxer_network
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    command: >
      sh -c "
        echo ' Verificando dependências do Node.js...' &&
        if [ ! -d 'node_modules' ] || [ ! -f 'package-lock.json' ]; then
          echo '📥 Instalando dependências...' &&
          npm install
        else
          echo '✅ Dependências já instaladas!'
        fi &&
        echo ' Iniciando servidor de desenvolvimento...' &&
        npm run dev
      "

  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fluxxer_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - fluxxer_network
    environment:
      - POSTGRES_DB=fluxxer_test
      - POSTGRES_USER=fluxxer_user
      - POSTGRES_PASSWORD=fluxxer_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fluxxer_user -d fluxxer_test"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Redis para cache e filas
  redis:
    image: redis:7-alpine
    container_name: fluxxer_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fluxxer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fluxxer_network:
    driver: bridge 