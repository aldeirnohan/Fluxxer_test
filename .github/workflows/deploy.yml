name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fluxxer_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, gd, zip, redis
        tools: composer:v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install PHP dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Install Node.js dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Copy environment file
      run: cp backend/env.example backend/.env
    
    - name: Generate application key
      run: php artisan key:generate
    
    - name: Set permissions
      run: |
        chmod -R 755 backend/storage
        chmod -R 755 backend/bootstrap/cache
    
    - name: Run database migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: fluxxer_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
    
    - name: Run tests
      run: php artisan test
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: fluxxer_test
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          cd /path/to/your/project
          git pull origin main
          docker-compose -f docker-compose.prod.yml down
          docker-compose -f docker-compose.prod.yml build --no-cache
          docker-compose -f docker-compose.prod.yml up -d
          docker-compose -f docker-compose.prod.yml exec -T app php artisan migrate --force
          docker-compose -f docker-compose.prod.yml exec -T app php artisan config:cache
          docker-compose -f docker-compose.prod.yml exec -T app php artisan route:cache
          docker-compose -f docker-compose.prod.yml exec -T app php artisan view:cache 